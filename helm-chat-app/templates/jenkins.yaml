---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: {{ .Values.persistentVolumeandClaims.jenkins.pvName }}
  namespace: jenkins
  labels:
    app.kubernetes.io/name: jenkins-jdk17-pv
    app.kubernetes.io/instance: prod-instance-pv
    app.kubernetes.io/component: cicd-storage
    app.kubernetes.io/part-of: convo-ai
spec:
  capacity:
    storage: 10Gi
  accessModes:
    - ReadWriteOnce
  persistentVolumeReclaimPolicy: Retain
  hostPath:
    path: {{ .Values.persistentVolumeandClaims.jenkins.pvHostPath }}
    type: DirectoryOrCreate

---

apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: {{ .Values.persistentVolumeandClaims.jenkins.pvcName }}
  namespace: jenkins
  labels:
    app.kubernetes.io/name: jenkins-jdk17-pvc
    app.kubernetes.io/instance: prod-instance-pvc
    app.kubernetes.io/component: cicd-storage
    app.kubernetes.io/part-of: convo-ai
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "helm-chat-app.fullname" . }}-jenkins-sv
  namespace: jenkins
  labels:
    {{- include "helm-chat-app.labels" . | nindent 4 }}
    app.kubernetes.io/name: jenkins-jdk17-sv-deployment
    app.kubernetes.io/instance: prod-instance-deployment
    app.kubernetes.io/component: cicd-server
    app.kubernetes.io/part-of: convo-ai
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: jenkins-jdk17-sv
      app.kubernetes.io/instance: prod-instance-sv
  template:
    metadata:
      labels:
        {{- include "helm-chat-app.labels" . | nindent 8 }}
        app.kubernetes.io/name: jenkins-jdk17-sv
        app.kubernetes.io/instance: prod-instance-sv
        app.kubernetes.io/component: ci-cd
        app.kubernetes.io/part-of: convo-ai
    spec:
      containers:
        - name: jenkins-jdk17-container
          image: {{ .Values.images.jenkins.image }}:{{ .Values.images.jenkins.tag }}
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: {{ .Values.containerPorts.jenkins.http }}
              protocol: TCP
            - name: jnlp
              containerPort: {{ .Values.containerPorts.jenkins.jnlp}}
          volumeMounts:
            - name: jenkins-home
              mountPath: /var/jenkins_home
      volumes:
        - name: jenkins-home
          persistentVolumeClaim:
            claimName: {{ .Values.persistentVolumeandClaims.jenkins.pvcName }}
---
apiVersion: v1
kind: Service
metadata:
  name: jenkins-service
  namespace: jenkins
  labels:
    app.kubernetes.io/name: jenkins
spec:
  type: NodePort
  selector:
    app.kubernetes.io/name: jenkins-jdk17-sv
    app.kubernetes.io/instance: prod-instance-sv
  ports:
    - name: ui
      port: 8080
      targetPort: 8080
      nodePort: 30080
    - name: agent
      port: 50000
      targetPort: 50000
      nodePort: 32000
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  namespace: jenkins
  name: jenkins-pod-manager
rules:
  - apiGroups: [""]
    resources: ["pods"]
    verbs: ["get", "list", "watch", "create", "delete"]
  - apiGroups: [""]
    resources: ["pods/log"]
    verbs: ["get", "list"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: jenkins-pod-manager-binding
  namespace: jenkins
subjects:
  - kind: ServiceAccount
    name: default
    namespace: jenkins
roleRef:
  kind: Role
  name: jenkins-pod-manager
  apiGroup: rbac.authorization.k8s.io

